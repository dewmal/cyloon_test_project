apply plugin: 'com.athaydes.osgi-run'


buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.athaydes.gradle.osgi', name: 'osgi-run-core', version: '1.3.1'
        classpath group: 'com.athaydes.gradle.osgi', name: 'ipojo-plugin', version: '1.1.1'
    }
}


allprojects {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'com.athaydes.ipojo'
    dependencies {
        compile 'org.apache.felix:org.apache.felix.ipojo.annotations:1.12.0'

        compile 'org.osgi:org.osgi.core:4.3.1'

        compile(group: 'org.osgi', name: 'org.osgi.compendium', version: '4.2.0') {
            /* This dependency was originally in the Maven provided scope, but the project was not of type war.
            This behavior is not yet supported by Gradle, so this dependency has been converted to a compile dependency.
            Please review and delete this closure when resolved. */
        }

    }
}

dependencies {
//    osgiRuntime('org.apache.cxf.dosgi:cxf-dosgi-ri-singlebundle-distribution:1.4.0') {
//        transitive = false
//    }

//    osgiRuntime 'org.slf4j:slf4j-simple:1.7.7'
    osgiRuntime 'org.apache.ant:ant:1.9.6'

    osgiRuntime 'org.apache.felix:org.osgi.compendium:1.4.0'

    osgiRuntime 'log4j:log4j:1.2.17'
//    osgiRuntime 'org.apache.logging.log4j:log4j-slf4j-impl:2.5'

    osgiRuntime 'org.apache.felix:org.apache.felix.log:1.0.1'


//    osgiRuntime 'commons-codec:commons-codec:1.10'
//    osgiRuntime 'org.eclipse.equinox:common:3.6.200-v20130402-1505'

}

def clientConfig = project.hasProperty('client')


runOsgi {
//    configSettings = 'equinox'
//    programArgs = '-console'
    bundles = IPOJO_ALL_BUNDLES + subprojects
//    outDir = clientConfig ? 'client' : 'server'
    config += [
            'felix.log.level'                         : 3,
            'org.osgi.framework.system.packages.extra': 'sun.reflect,sun.misc,sun.nio.ch,com.sun.jdmk.comm,com.sun.tools.jconsole,sun.tools.jconsole,com.sun.javadoc,com.sun.tools.javadoc',
            'core.cyloon.crawler.path'                : '/home/dewmal/projects/production/seed/db/db.cyloon'
    ]
    wrapInstructions {
        // use regex to match file name of dependency
        manifest("c3p0.*") {
            // import everything except the log4j package - should not be needed
            instruction 'Import-Package', '!org.apache.log4j', '*'
            instruction 'Bundle-Description', 'c3p0 is an easy-to-use library for making traditional ' +
                    'JDBC drivers "enterprise-ready" by augmenting them with functionality defined by ' +
                    'the jdbc3 spec and the optional extensions to jdbc2.'
        }
    }
}